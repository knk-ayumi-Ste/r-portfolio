@p_w: 36vw; //ページwidth値
@p_h: (@p_w * 0.75); //ページheight値
@p_c: #fff4e1; //ページカラー
@p_r: 4px; //border-radius 角の丸み
@p_f: 1.4s; //速度
@p_d: 20%; //暗さ？
@bg: mix(#fff, desaturate(#9ddcdc, 0%), 15%); //色を混ぜる
@l_c: #e67a7a; //リンクカラー

.book {
  transition: opacity 0.4s 0.2s; //ふわっとする
}

.book:not(.bound) {
  //opacity: 0;
}

.page {
  width: (@p_w);
  height: (@p_h);
  background-color: @p_c;
  float: left; //横並び左寄せ
  margin-bottom: 0.5em;

  &:first-child {
    // .pageの最初の要素
    float: right; //横並び右寄せ
  }

  &:nth-child(even) {
    clear: both; //要素は先行する左右両方の浮動要素と切り離され、下に移動
  }
}

.bound {
  perspective: 250vw; //遠近感・立体感

  .pages {
    width: (@p_w * 2); //見開きのページ幅
    height: @p_h;
    position: relative; //親要素を起点に
    transform: rotateX(12deg); //水平軸に回転
    transform-style: preserve-3d; //傾く角度
    backface-visibility: hidden; //裏側を可視化しない
    border-radius: @p_r;
    box-shadow: 0 0 0 1px @bg;
  }

  .page {
    float: none; //要素は浮動しない
    clear: none; //要素は先行する浮動要素と切り離されず、下に移動しません
    margin: 0;
    position: absolute; //親要素に対して相対配置
    top: 0;
    width: @p_w;
    height: @p_h;
    background-color: @p_c;
    transform-origin: 0 0; //座標変換の原点
    transition: transform @p_f; //プロパティ名　速度
    backface-visibility: hidden;
    transform-style: preserve-3d; //子要素を3D空間に配置
    cursor: pointer;
    user-select: none; //テキストの範囲選択不可

    &:before {
      content: ""; //任意の文字列
      position: absolute;
      top: 0;
      bottom: 0;
      left: 0;
      right: 0;
      background: fadeout(#000, 100%);
      transition: background (@p_f / 2);
      z-index: 2; //重なり 上に表示
    }

    &:nth-child(odd) {
      //奇数(右)ページ
      pointer-events: all; //allはSVGのみらしい? 調整必要かもしれない
      transform: rotateY(0deg);
      right: 0;
      border-radius: 0 @p_r @p_r 0;

      &:hover {
        transform: rotateY(-10deg);
        &:before {
          background: fadeout(#000, 97%);
        }
      }

      &:before {
        background: fadeout(#000, 100%);
      }
    }

    &:nth-child(even) {
      //偶数(左)ページ
      pointer-events: none;
      transform: rotateY(180deg); //縦軸に180度回転(右にめくる)
      transform-origin: 100% 0;
      left: 0;
      border-radius: @p_r 0 0 @p_r;

      &:before {
        background: fadeout(#000, (100% - @p_d));
      }
    }

    &.grabbing {
      transition: none;
    }

    &.flipped {
      &:nth-child(odd) {
        pointer-events: none;
        transform: rotateY(-180deg); //縦軸に180度回転(左にめくる)
        &:before {
          background: fadeout(#000, (100% - @p_d));
        }
      }

      &:nth-child(even) {
        pointer-events: all;
        transform: rotateY(0deg);

        &:hover {
          transform: rotateY(10deg);
          &:before {
            background: fadeout(#000, 97%);
          }
        }

        &:before {
          background: fadeout(#000, 100%);
        }
      }
    }
  }
}

// General
* {
  &,
  :before,
  &:after {
    box-sizing: border-box;
  }
}

html,
body {
  background: @bg;
  opacity: ;
  -webkit-tap-highlight-color: fadeout(#000, 100%);
}

html {
  height: 100%;
}

body {
  min-height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 2em 0;
  line-height: 1.5em;
}

// These Pages
.page {
  color: #757575; //文字色
  // background: left top no-repeat; //左上から繰り返しなし　画像設定するなら必要
  // background-size: cover; //できるだけ画面いっぱい　画像設定するなら必要
}
.page:nth-child(3), //.pageクラスの(n)番目の要素
.page:nth-child(5),
.page:nth-child(7),
.page:nth-child(9) {
  // background-position: right top; 画像設定するなら必要
}

.page:nth-child(1) {
  // background-image: url(./img/05.jpg); 背景画像
}
.page:nth-child(2),
.page:nth-child(3) {
}
.page:nth-child(4),
.page:nth-child(5) {
}
.page:nth-child(6),
.page:nth-child(7) {
}
.page:nth-child(8),
.page:nth-child(9) {
}
.page:nth-child(10) {
}

// .index {
//   display: flex;
//   justify-content: space-between;
//   align-items: center;
//   position: relative;
//   padding: 30px 0 30px 33px;
//   width: 250px;
//   color: #333;
//   font-size: 18px;
//   font-weight: 700;
//   text-decoration: none;
// }
// .index::before {
//   content: '';
//   transform: rotate(45deg);
//   width: 8px;
//   height: 8px;
//   border-top: 3px solid #2b550e;
//   border-right: 3px solid #2b550e;
// }
// .index::after {
//   content: '';
//   position: absolute;
//   top: 50%;
//   left: 0;
//   transform: translateY(-50%);
//   width: 80px;
//   height: 80px;
//   background-color: rgba(0 0 0 0);
//   border: 2px solid #90be70;
//   border-radius: 40% 60% 60% 40% / 40% 40% 60% 60%;
// }

.skill img{
  width: auto;
  height: 30px;
}

#link {
  color: @p_c;
  background: @l_c;
  border-radius: 100vh;
  text-decoration: none;
}